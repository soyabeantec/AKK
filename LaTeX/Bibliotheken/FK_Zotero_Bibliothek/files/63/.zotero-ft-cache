    Home (current)
    About
    More Languages
    Python Java HTML Go C C++ JavaScript PHP Shell C# Perl Ruby Scala SQL

    Python
    Java
    HTML
    Go
    C
    C++
    JavaScript
    PHP
    Shell
    C#
    Perl
    Ruby
    Scala
    SQL

Tweet
Weiterempfehlen 16.2K

    Welcome /
    Dictionaries

Get started learning Python with DataCamp's free Intro to Python tutorial . Learn Data Science by completing interactive coding challenges and watching videos by expert instructors. Start Now !
Dictionaries

A dictionary is a data type similar to arrays, but works with keys and values instead of indexes. Each value stored in a dictionary can be accessed using a key, which is any type of object (a string, a number, a list, etc.) instead of using its index to address it.

For example, a database of phone numbers could be stored using a dictionary like this:
phonebook = {} phonebook["John"] = 938477566 phonebook["Jack"] = 938377264 phonebook["Jill"] = 947662781 print(phonebook)

    script.py
    solution.py
    IPython Shell
    Plots


1
2
phonebook = { }
phonebook [ "John" ] = 938477566
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    IPython Shell
    Plots


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
1/0 0/0
Hint Solution Run Session Inactive
Powered by DataCamp

Alternatively, a dictionary can be initialized with the same values in the following notation:
phonebook = { "John" : 938477566, "Jack" : 938377264, "Jill" : 947662781 } print(phonebook)

    script.py
    solution.py
    IPython Shell
    Plots


1
2
phonebook = {
"John" : 938477566 ,
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    IPython Shell
    Plots


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
1/0 0/0
Hint Solution Run Session Inactive
Powered by DataCamp
Iterating over dictionaries

Dictionaries can be iterated over, just like a list. However, a dictionary, unlike a list, does not keep the order of the values stored in it. To iterate over key value pairs, use the following syntax:
phonebook = {"John" : 938477566,"Jack" : 938377264,"Jill" : 947662781} for name, number in phonebook.items(): print("Phone number of %s is %d" % (name, number))

    script.py
    solution.py
    IPython Shell
    Plots


1
2
phonebook = { "John" : 938477566 , "Jack" : 938377264 , "Jill" : 947662781 }
for name , number in phonebook . items ( ) :
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    IPython Shell
    Plots


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
1/0 0/0
Hint Solution Run Session Inactive
Powered by DataCamp
Removing a value

To remove a specified index, use either one of the following notations:
phonebook = { "John" : 938477566, "Jack" : 938377264, "Jill" : 947662781 } del phonebook["John"] print(phonebook)

    script.py
    solution.py
    IPython Shell
    Plots


1
2
phonebook = {
"John" : 938477566 ,
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    IPython Shell
    Plots


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
1/0 0/0
Hint Solution Run Session Inactive
Powered by DataCamp

or:
phonebook = { "John" : 938477566, "Jack" : 938377264, "Jill" : 947662781 } phonebook.pop("John") print(phonebook)

    script.py
    solution.py
    IPython Shell
    Plots


1
2
phonebook = {
"John" : 938477566 ,
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    IPython Shell
    Plots


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
1/0 0/0
Hint Solution Run Session Inactive
Powered by DataCamp
Exercise

Add "Jake" to the phonebook with the phone number 938273443, and remove Jill from the phonebook.
phonebook = { "John" : 938477566, "Jack" : 938377264, "Jill" : 947662781 } # write your code here # testing code if "Jake" in phonebook: print("Jake is listed in the phonebook.") if "Jill" not in phonebook: print("Jill is not listed in the phonebook.") phonebook = { "John" : 938477566, "Jack" : 938377264, "Jill" : 947662781 } # write your code here phonebook["Jake"] = 938273443 del phonebook["Jill"] # testing code if "Jake" in phonebook: print("Jake is listed in the phonebook.") if "Jill" not in phonebook: print("Jill is not listed in the phonebook.") test_output_contains("Jake is listed in the phonebook.") test_output_contains("Jill is not listed in the phonebook.") success_msg("Nice work!")

    script.py
    solution.py
    IPython Shell
    Plots


1
2
phonebook = {
"John" : 938477566 ,
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    IPython Shell
    Plots


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
1/0 0/0
Hint Solution Run Session Inactive
Powered by DataCamp

This site is generously supported by DataCamp . DataCamp offers online interactive Python Tutorials for Data Science. Join over a million other learners and get started learning Python for data science today!
Previous Tutorial Next Tutorial
Start your future with a Data Science Certificate.
Sponsors
Copyright Â© learnpython.org. Read our Terms of Use and Privacy Policy
